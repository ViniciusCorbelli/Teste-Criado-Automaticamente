/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 20 16:13:47 GMT 2024
 */

package ufjf.br;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import ufjf.br.Calculadora;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Calculadora_ESTest extends Calculadora_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.subtrairError(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.subtrairError(0, 1);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.subtrair(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.subtrair(66, 526);
      assertEquals((-460), int0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.somarError((-2071), (-2071));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.somarError(0, (-2599));
      assertEquals(2599, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.somar(0, 0);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.somar(1, 0);
      assertEquals(1, int0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.multiplicarError((-2161), (-1));
      assertEquals(2161, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.multiplicarError((-1051), 1);
      assertEquals((-1051), int0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.multiplicar(3421, 3421);
      assertEquals(11703241, int0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.multiplicar(2161, (-2161));
      assertEquals((-4669921), int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.dividirError(0, 644);
      assertEquals(0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.dividirError((-1433), 1);
      assertEquals((-1433.0), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.dividir(0, (-191));
      assertEquals(-0.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.dividir(438, (-217));
      assertEquals((-2.0184331797235022), double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      // Undeclared exception!
      try { 
        calculadora0.multiplicarError(24, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // / by zero
         //
         verifyException("ufjf.br.Calculadora", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      // Undeclared exception!
      try { 
        calculadora0.dividir(0, 0);
        fail("Expecting exception: ArithmeticException");
      
      } catch(ArithmeticException e) {
         //
         // Erro
         //
         verifyException("ufjf.br.Calculadora", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.dividir(1, 1);
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      double double0 = calculadora0.dividirError((-2760), (-2760));
      assertEquals(1.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.somar((-1380), (-1380));
      assertEquals((-2760), int0);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.multiplicar(0, 1571);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.multiplicarError(1, (-1380));
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.subtrairError((-2760), (-2760));
      assertEquals((-5520), int0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.subtrair(1134, (-1380));
      assertEquals(2514, int0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Calculadora calculadora0 = new Calculadora();
      int int0 = calculadora0.somarError(0, 1);
      assertEquals((-1), int0);
  }
}
